<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">x86</Platform>
    <ProjectGuid>{DDB6DB6D-E5DE-4BDB-8AC8-26DF800E9FF0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <RootNamespace>Pencil.Gaming</RootNamespace>
    <ReleaseVersion>
    </ReleaseVersion>
    <SynchReleaseVersion>False</SynchReleaseVersion>
    <Description>A minimalistic gaming library for C# based on OpenTK.</Description>
    <AssemblyName>Pencil.Gaming</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
    <DebugType>none</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>..\..\Build\Release\lib</OutputPath>
    <DefineConstants>USE_GL_CORE; USE_GLFW3;</DefineConstants>
    <WarningLevel>4</WarningLevel>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <CustomCommands>
      <CustomCommands>
        <Command type="Clean" command="bash -c &quot;rm -rf ${TargetDir}/Pencil* ${TargetDir}/NVorbis.dll&quot;" workingdir="" />
        <Command type="AfterBuild" command="bash -c &quot;mkdir -p ${TargetDir}/../lib32 ${TargetDir}/../lib64 &amp;&amp; mv ${TargetDir}/lib32/* ${TargetDir}/../lib32 &amp;&amp; mv ${TargetDir}/lib64/* ${TargetDir}/../lib64 &amp;&amp; rm -r ${TargetDir}/lib32 ${TargetDir}/lib64&quot;" workingdir="" />
      </CustomCommands>
    </CustomCommands>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'ReleaseWindows|x86' ">
    <DebugType>none</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>..\..\Build\Release\lib</OutputPath>
    <DefineConstants>USE_GL_CORE; USE_GLFW3;</DefineConstants>
    <WarningLevel>4</WarningLevel>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>..\..\Build\Debug\lib</OutputPath>
    <DefineConstants>USE_GL_CORE; USE_GLFW3;</DefineConstants>
    <WarningLevel>4</WarningLevel>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <CustomCommands>
      <CustomCommands>
        <Command type="AfterBuild" command="bash -c &quot;mkdir -p ${TargetDir}/../lib32 ${TargetDir}/../lib64 &amp;&amp; mv ${TargetDir}/lib32/* ${TargetDir}/../lib32 &amp;&amp; mv ${TargetDir}/lib64/* ${TargetDir}/../lib64 &amp;&amp; rm -r ${TargetDir}/lib32 ${TargetDir}/lib64&quot;" workingdir="" />
        <Command type="Clean" command="bash -c &quot;rm -rf ${TargetDir}/Pencil* ${TargetDir}/NVorbis.dll&quot;" workingdir="" />
      </CustomCommands>
    </CustomCommands>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'DebugWindows|x86' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>..\..\Build\Debug\lib</OutputPath>
    <DefineConstants>USE_GL_CORE; USE_GLFW3;</DefineConstants>
    <WarningLevel>4</WarningLevel>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <DebugType>full</DebugType>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Core" />
    <Reference Include="NVorbis">
      <HintPath>lib\NVorbis.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="AssemblyInfo.cs" />
    <Compile Include="AutoGeneratedAttribute.cs" />
    <Compile Include="Math\MathHelper.cs" />
    <Compile Include="Math\Quaternion.cs" />
    <Compile Include="Math\Vector2.cs" />
    <Compile Include="Math\Vector3.cs" />
    <Compile Include="Graphics\Color4.cs" />
    <Compile Include="Audio\Alc32.cs" />
    <Compile Include="Audio\Alc64.cs" />
    <Compile Include="Math\Matrix.cs" />
    <Compile Include="Graphics\GlEnums.cs" />
    <Compile Include="Graphics\AssetLoadException.cs" />
    <Compile Include="Glfw\Glfw2.cs" />
    <Compile Include="Glfw\Glfw3.cs" />
    <Compile Include="Glfw\Glfw2_32.cs" />
    <Compile Include="Glfw\Glfw2_64.cs" />
    <Compile Include="Glfw\Glfw3_32.cs" />
    <Compile Include="Glfw\Glfw3_64.cs" />
    <Compile Include="Glfw\Glfw2Delegates.cs" />
    <Compile Include="Glfw\Glfw2DelegateTypes.cs" />
    <Compile Include="Glfw\Glfw2Enum.cs" />
    <Compile Include="Glfw\Glfw2Structs.cs" />
    <Compile Include="Glfw\Glfw3Delegates.cs" />
    <Compile Include="Glfw\Glfw3DelegateTypes.cs" />
    <Compile Include="Glfw\Glfw3Enum.cs" />
    <Compile Include="Glfw\Glfw3Structs.cs" />
    <Compile Include="Audio\AlcManager.cs" />
    <Compile Include="Scripting\Lua64.cs" />
    <Compile Include="Scripting\LuaDelegateTypes.cs" />
    <Compile Include="Scripting\LuaStructs.cs" />
    <Compile Include="Scripting\LuaDelegates.cs" />
    <Compile Include="Scripting\Lua32.cs" />
    <Compile Include="Scripting\LuaEnums.cs" />
    <Compile Include="Scripting\Lua.cs" />
    <Compile Include="Scripting\LuaMacroFunctions.cs" />
    <Compile Include="Scripting\LuaL64.cs" />
    <Compile Include="Scripting\LuaL32.cs" />
    <Compile Include="Scripting\LuaLDelegates.cs" />
    <Compile Include="Scripting\LuaL.cs" />
    <Compile Include="Scripting\LuaLMacroFunctions.cs" />
    <Compile Include="Audio\Sound.cs" />
    <Compile Include="Audio\Listener.cs" />
    <Compile Include="Glfw\Glfw2KeyboardState.cs" />
    <Compile Include="Glfw\Glfw2MouseState.cs" />
    <Compile Include="Glfw\Glfw3KeyboardState.cs" />
    <Compile Include="Glfw\Glfw3MouseState.cs" />
    <Compile Include="Math\Vector3i.cs" />
    <Compile Include="Math\Vector2i.cs" />
    <Compile Include="Math\Vector4i.cs" />
    <Compile Include="Math\Vector4.cs" />
    <Compile Include="Math\Rectanglei.cs" />
    <Compile Include="Math\Rectangle.cs" />
    <Compile Include="Audio\ALUtils.cs" />
    <Compile Include="Audio\AL.cs" />
    <Compile Include="Audio\ALDelegates.cs" />
    <Compile Include="Audio\AL32.cs" />
    <Compile Include="Audio\AL64.cs" />
    <Compile Include="Audio\ALEnums.cs" />
    <Compile Include="Graphics\GLHelper.cs" />
    <Compile Include="Graphics\GLUtils.cs" />
    <Compile Include="Graphics\GLLoadException.cs" />
    <Compile Include="Graphics\GLCore.cs" />
    <Compile Include="Graphics\GLDelegates.cs" />
    <Compile Include="Graphics\GL.cs" />
    <Compile Include="Math\DualQuaternion.cs" />
  </ItemGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ItemGroup />
  <ItemGroup>
    <None Include="LICENSE.TXT" />
    <None Include="lib\NVorbis.dll" />
    <None Include="lib32\glfw.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="lib32\GLFW_LINUX_BROKEN.so">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="lib32\libopenal.so">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="lib32\openal32.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="lib32\liblua.dylib">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="lib32\liblua.so">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="lib32\lua.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="lib32\libglfw.dylib">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="lib64\glfw.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="lib64\libglfw.so">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="lib64\libopenal.so">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="lib64\openal32.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="lib64\liblua.so">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="lib64\lua.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="lib64\liblua.dylib">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="lib64\libglfw.dylib">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Pencil.Gaming.dll.config">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ProjectExtensions>
    <MonoDevelop>
      <Properties>
        <Policies>
          <TextStylePolicy inheritsSet="VisualStudio" inheritsScope="text/plain" scope="text/x-csharp" />
          <CSharpFormattingPolicy IndentSwitchBody="True" IndentBlocksInsideExpressions="True" AnonymousMethodBraceStyle="NextLine" PropertyBraceStyle="NextLine" PropertyGetBraceStyle="NextLine" PropertySetBraceStyle="NextLine" EventBraceStyle="NextLine" EventAddBraceStyle="NextLine" EventRemoveBraceStyle="NextLine" StatementBraceStyle="NextLine" ElseNewLinePlacement="NewLine" CatchNewLinePlacement="NewLine" FinallyNewLinePlacement="NewLine" WhileNewLinePlacement="DoNotCare" ArrayInitializerWrapping="DoNotChange" ArrayInitializerBraceStyle="NextLine" BeforeMethodDeclarationParentheses="False" BeforeMethodCallParentheses="False" BeforeConstructorDeclarationParentheses="False" NewLineBeforeConstructorInitializerColon="NewLine" NewLineAfterConstructorInitializerColon="SameLine" BeforeDelegateDeclarationParentheses="False" NewParentheses="False" SpacesBeforeBrackets="False" inheritsSet="Mono" inheritsScope="text/x-csharp" scope="text/x-csharp" />
        </Policies>
      </Properties>
    </MonoDevelop>
  </ProjectExtensions>
</Project>